<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<application>
    <packageName>com.evernote</packageName>
    <components>
        <Component>
            <type>activity</type>
            <name>ui.HomeActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>ui.PhoneMainActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TabletFragmentActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.EvernoteMapActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.SnippetActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.NoteListActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.MapActivityGroup</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.PinDropActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.PinLockActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.SecurityPreferenceActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SECURITY_PREFERENCES</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TabManager</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NotebookActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.OfflineNotebookSettings</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LinkedNotebookActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LinkedNotebookSettings</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TagsActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.InformationActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteListActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SEARCH_NOTES</actions>
                    <actions>android.intent.action.SEARCH</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.SEARCH_NOTES</actions>
                    <actions>android.intent.action.SEARCH</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.SEARCH_NOTES</actions>
                    <actions>android.intent.action.SEARCH</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteListAloneActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.intent.action.VIEW</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST_TABLET</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.intent.action.VIEW</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST_TABLET</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteViewActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.VIEW_NOTE</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteViewAloneActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.VIEW_NOTE_TABLET</actions>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>evernote</scheme>
                        <mimeType></mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.VIEW_NOTE_TABLET</actions>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>evernote</scheme>
                        <mimeType></mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.EvernotePreferenceActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NewNoteActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.CREATE_NEW_NOTE</actions>
                    <actions>com.evernote.action.NEW_SNAPSHOT</actions>
                    <actions>com.evernote.action.NEW_VOICE_NOTE</actions>
                    <actions>com.evernote.action.NEW_SKITCH_NOTE</actions>
                    <actions>android.intent.action.SEND</actions>
                    <actions>android.intent.action.SEND_MULTIPLE</actions>
                    <data>
                        <scheme></scheme>
                        <mimeType>*/*</mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.CREATE_NEW_NOTE</actions>
                    <actions>com.evernote.action.NEW_SNAPSHOT</actions>
                    <actions>com.evernote.action.NEW_VOICE_NOTE</actions>
                    <actions>com.evernote.action.NEW_SKITCH_NOTE</actions>
                    <actions>android.intent.action.SEND</actions>
                    <actions>android.intent.action.SEND_MULTIPLE</actions>
                    <data>
                        <scheme></scheme>
                        <mimeType>*/*</mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NewNoteAloneActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.WidgetNewNoteActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.widget.action.CREATE_NEW_NOTE</actions>
                    <actions>com.evernote.widget.action.NEW_SNAPSHOT</actions>
                    <actions>com.evernote.widget.action.NEW_VOICE_NOTE</actions>
                    <actions>com.evernote.widget.action.NEW_SKITCH_NOTE</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LearnMoreActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.EmailActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TagEditActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteInfoActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.FilePickerActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.AuthenticationActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.WebActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TrunkActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.SearchActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.WidgetSearchActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SEARCH</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.AdvanceSearchActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.AdvanceSearchSelector</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LoginActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.RegistrationActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.CaptchaActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.ResetPasswordActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.RateAppActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.DYNDialogActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.StandardDialogActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.ShareWithFacebook</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.ShareDialogActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.SDCardChangedActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.helper.URIBrokerActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>stage.evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.stage.evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.billing.BillingActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.billing.LaunchBillingActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>stage.evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.stage.evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NotebookShareSettingsActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>ui.EmailPickerActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.client.EvernoteService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.ui.helper.WidgetProviderService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.client.SyncService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.billing.BillingService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
            <sensitiveFlows>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.EvernoteWidgetProvider</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.appwidget.action.APPWIDGET_UPDATE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.EvernoteWidgetWSnippetProvider</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.appwidget.action.APPWIDGET_UPDATE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.WidgetUpdateReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.ACTION_RECENT_NOTES_CHANGED</actions>
                    <actions>com.evernote.action.LOGOUT_DONE</actions>
                    <actions>com.evernote.action.SYNC_DONE</actions>
                    <actions>com.evernote.action.CHUNK_DONE</actions>
                    <actions>com.evernote.action.NOTE_UPLOADED</actions>
                    <actions>com.evernote.action.SAVE_NOTE_DONE</actions>
                    <actions>com.evernote.action.CONTENT_DONE</actions>
                    <actions>com.evernote.action.THUMBNAIL_DONE</actions>
                    <actions>com.evernote.action.ACTION_PINLOCK_STATE_CHANGE</actions>
                    <actions>com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED</actions>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.ACTION_RECENT_NOTES_CHANGED</actions>
                    <actions>com.evernote.action.LOGOUT_DONE</actions>
                    <actions>com.evernote.action.SYNC_DONE</actions>
                    <actions>com.evernote.action.CHUNK_DONE</actions>
                    <actions>com.evernote.action.NOTE_UPLOADED</actions>
                    <actions>com.evernote.action.SAVE_NOTE_DONE</actions>
                    <actions>com.evernote.action.CONTENT_DONE</actions>
                    <actions>com.evernote.action.THUMBNAIL_DONE</actions>
                    <actions>com.evernote.action.ACTION_PINLOCK_STATE_CHANGE</actions>
                    <actions>com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.BootReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.BOOT_COMPLETED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.SyncNotification</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SYNC_STARTED</actions>
                    <actions>com.evernote.action.SYNC_ERROR</actions>
                    <actions>com.evernote.action.SYNC_DONE</actions>
                    <actions>com.evernote.action.SAVE_NOTE_DONE</actions>
                    <actions>com.evernote.action.SDCARD_CHANGED</actions>
                    <actions>com.evernote.action.DB_READ_ONLY</actions>
                    <actions>com.evernote.action.DB_OPEN_CREATION_FAILED</actions>
                    <actions>com.evernote.action.DB_CORRUPTED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.sonyericsson.extras.livekey</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.StopAudioNoteReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.ACTION_STOP_AUDIO_NOTE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.billing.BillingReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.android.vending.billing.IN_APP_NOTIFY</actions>
                    <actions>com.android.vending.billing.RESPONSE_CODE</actions>
                    <actions>com.android.vending.billing.PURCHASE_STATE_CHANGED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.util.MultiUseReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.ACTION_DELAYED_NOTIFICATION</actions>
                    <data>
                        <scheme>notificationId</scheme>
                        <mimeType></mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>provider</type>
            <name>com.evernote.provider.EvernoteProvider</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
    </components>
    <newIntents>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>o2nvv1m73pequ8dnplaeukr1ki</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>i408c4ftud7h2o081d03bvv8nb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nmjlnvi8q4fq113i486vo3pkab</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u3ip97qli1qujrnnmjsh414r8k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ho2f4p7jakm6ol8ggmu5s040u1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>r0sll6ffahhj6k334v2lc05r45</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>oja8jgri0jhdckq37rlpk0mhgi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ra9nnm1eqiaapmik42qmmb222m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>"application/zip"</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lrcm2ju3a54p6skpoud3iufi7n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_CACHE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>irjmo2nvo6to8cqrodre45gk8r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5artqcns4l2mms918hsoqpr3rd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>sbgnet0qdhdop2csl2k79jcqbs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ja9dbqvvngq8718iuf1trk4875</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8lbeh5320e62075ck5uhl7t2qr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>eakouue0b3i4t3cqoqalnjsmcu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pc4j471e7gtikv2to0q4u6b2hp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lfje0v0g29666g3jeoca3gob5q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gjms1ki88l9t26j2q1atufqskr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>b54bdvm22thsrcmhh1q9s1tq4q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>q74nb262gghqtj9g8n0qk7t57m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>avjdlgnve3p6373dl1htgfek05</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p9jdluebh8r6sqjnqn668rq2bc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.UPDATE_NOTE_TAGS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dk02ie4gndnk23680d0gj1mi03</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>k01mko96ajdg533dudp2s1hqvf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>n0o4nmq9nhuuoptseoc5t9rl9k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>flqgg959appaep9kj0liapqjbf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>pm6khmfr92qqmf6drkph97elts</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p1v0l1i41lq3sc62v2r1v32j0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.TAG_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>139rllp4le25b532tmuh8g32ih</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>g8pdbs017278vijo01ljq7gk8l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>v7n6400q75qj7fdq87orntib5v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>jrc8ekk4bha2jctkb7nm1irj2d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rd1h5r9vuce0q7paki8prf5ftc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>b5s4no4f2dh12q1tp6t1499ufl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>u0gdqon8jls4s04gbohit3k0ta</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>518u148j73b51o2au9ebohtk1t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>i376sebtbs62t4mm1m81neenoq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>h2qjrp33ghp01tnialcj0k9mju</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>mi9f3p2cm1oatlg4fbu8k7mv0u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nr5j5hkopis6j5q5f7mb3uj3c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ir63jg81pkk2tdnqstj061nv0m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7ffrhcrja4ovoa64103erur9sg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>tcu84ni27un5ag96snnhvkvmre</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>158q8fvca5cp4474opugc6jcf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pasvhvcvp4385kuqe6e55mra18</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_HTML"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9qpj8limmk3kfnk5vs5gu0nj8f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>raiao0udad169erkdu65cheu15</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kmkr3iusqqm2i5shrdj2gh9ejm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a09g1uc4rbstihb7l2rv1ghrlg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>v8t16fl3pakornr0km7cfbtm75</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>6m9ee4q79dnlmfmhchhm2oa6tk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ds66h36kljcqjgddjs94cn84dp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>a1jo559i22ve9kdr1782r1mv7q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>tgthststtbmc79998vv8f4prih</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kd29lnjgeehkhjkno9pen4rc0p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fpci99gnigg4h6nap10dda7jst</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9q4p702bclqfd3sldq5n0e0mlp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5dihehk0g19na1phc3r6ru998b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6sl6jevqha3dtin22v8iaa3dgu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGOUT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>is3ti30ah6bi99c63rb8opo53v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lujf09fdss3maonnsbp45ua2ln</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a4hg3qng2t178gb9dufopi9jch</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>81fklc7rd32u6a0i1udq205uvo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>an99khdbe0q3m1oj1s37bse7j3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>j0fuijpdb4rt7sl81hp7cmgipp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4hnfrmpfrrsqd217g4ukpuqr7g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>"com.evernote.ACTION_STOP_AUDIO_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pclq5laabmcghhc7k9r2vcirkq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>14g6ofqmv501opvg4qnclcoh0j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>81nkugt33s8uemep525s2k1snk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nuk9l3id7pdslekgvo44huro3s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n1g3nq2j8n24tvdmgefu660du0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4dfpl93gcevg3unj9sgfkcp50i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5rm9l97l8g2ocn15650lrlpl55</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>46uk3lt53cj6k2auhae67lpf6u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>m32dtr3ffr44asphuuo2005n06</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>esvfl8qotk0s3mfc74h8u3lnbb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>77jt5g1rnds0ucs5d3a47v9rsp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_TODO"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kj3vith3tco15l4dgppqhscca1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>au2jctlca9g9iofbm4v2eeccv6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3966f86mvn25g40sch5q0mjhec</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>v4ina7bpfiui6qdqc7gnf816np</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8m6nv43esnug8rlsl1djnf0tgc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>af7hko8e1k285npa3iricqhkku</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>26bcndi6tv1tdrc1khqbuai3us</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>"com.android.vending.billing.MarketBillingService.BIND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>gloqb088pjhfaqd875on1morhv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>is8qjas48oh5okiaobgedkoeh2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nuudeb7ovt1vr4f041hg99bpij</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_CACHE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hvhm8vl366tg2snbugmuq00gav</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uv2da435d8idhnmjiqg9f94f59</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_TODO"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ing2dnk7kjfka4an8o7776d6tb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gb8g1qkmid85p88ppfan5f5ddo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>f8h89oscoos89npmpa6pe0risa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5v2a2pv4bl2459056hrbq2vv8r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>amt92h6v7ji4pg34rdbkbi5mtk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>h8a0kekvh7nadpratm88m7t2dq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mnsq63f25e2hn502iv3vogh9e0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mgso8ut5akcjtot1geotig91jv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>unjmfutbgluho4465gr8j0grhf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>4ngmh34tg3nsjar0tfl4d8suiq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>cga9jq1nlucanevogeg5fie9im</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>6pqflcv7t64omaco7blcm572su</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_RECENT_NOTES_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2ghchceirjup4l0pd93esmt5r8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ij6m9i6tpsq5t68o8dr54ho243</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l8l8s5usb7f0at4c3k78bo688t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gcor3sudashk9hm2va9gvdjbfd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fjdnq1uqtajfsj64l00irqsv15</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>b9ra0gqbv5lt6smf1dgl8eqe8m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vbhchbpsnu9hse1vv2e0gld9nk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>iv1512nnamaeq2t4bq679q68p8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RESET_PASSWORD"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>noqn8hkbg3gu25dpm9r21dikhb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"ACTION_LINK_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>n0fgl0v4qun6ml9tmref8kf1tu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>86lq2b0gj2g6dv6085ooev7dhc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>41eb6ev0iop1pg0upuvd3ia3kd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>439erms1u2rijaseom6gl38fcl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_CAPTCHA"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lnpa392nj6ca71h6rd0jeksj25</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jgkrmvd5amtpik7cknfvab0395</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3mlutklffkvloje3oh0hj2h9jj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nnog3entq2ee491cm8olphjgvv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uupgd5peokuheukvvf990tr0bg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.SDCARD_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>tuilhllmrh39h8fpqrbhlvrcg6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RESET_PASSWORD"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>j67ra2b8pqen3nmo58e6f0unfb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>a62n0j5325c2bdsmmimffdk4ap</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>dfoftrdh19qm54hm3r39s5cm9c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"android.intent.action.MEDIA_SCANNER_SCAN_FILE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7gc8pch71n0kubpp6igrjjcage</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>san9pquvrk8co0fjnf38p1o425</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2mds89mdk1hlt63j8o4p5bhftp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jvh9dibh91mbcb13efivvurish</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hs2p7viu81gle0to9n16eth1go</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.RESPONSE_CODE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tq5vhvi5j4806efqfj1h61h3kc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1s0kvcqvhatu4455j69hjs9ll0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jmqj9f6fivqpj7k8ibsbg3q5gk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>22vd79gvbtivkt5r5hru7a730p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qilvfr7ri33liavcjebop61843</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>trsi9pga4q93c9354vbvt3kbmb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>e6ucvj8lrooaqivu9nalt29h8l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jhk1rvsfajaof1va5ll4lqmmnl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vrbi1essu8v1kh5kc5boluuev2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b0aas59erm3it64mv6u7dtdqth</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fkc3gkrt4f1k64laifpg1hvpp0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4cdb7c2e8pcbc1lta5e7v3gvup</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>v7edaaqf0dr5tlmske9ot5l77t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vnnr8v0bs2oluqa6580snekd7l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>cd5oh7r34h96hnj23um8lbs7oe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8saq3gg9i25mphpvfm77e6nkei</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7mocjihkomomacjipc8f38d3hu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>kqchbtpce99l83fucpj0360fk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mfqe611r8tn90b30qf1ja3bpks</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vhaj56ostdkd8msm06p5c8lsf8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.UPDATE_NOTE_TAGS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fe040naciakah7pmo3gvbma0er</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>c9cgr6m5rh3aa50r1l1q0hvu30</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>47ejnl0a7912sqff55l7gsou7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jjnt4g9cu4a9d35fl2cc45a3g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qug49vdrma54abus6vlhncgbkk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>95gqlh3fomlk428asche9ea8q1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>b7psnp364lqil5533te4a9fo22</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>s04s6ajotg6fsdb4isaqtkp1hb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>"com.evernote.ACTION_STOP_AUDIO_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9hd0k1qe4t8a5qpshmgo4irja3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN_PREP_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>aitndtth3orgr8b1stedn59nks</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>fi404b3di9deh92ujminjng0aq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>uqdeuro3vkoig9q3unilnvc56r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>239g0uhc34fm2p8inj2vp4kas</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>otlf0neko57ch45bgul738hdt4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>9iof9e8mun7275ibr02o7cf081</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>iqgeb8lqcrudhgdscfppcf5248</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ckq9spftmo9647iuegv7mrn1o2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ponld2pokagi86ikhu8tcg6c6l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3k0e1tc1agp5j05u2eliijn64q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CHECK_USERNAME"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ghp8h9k1j1kmb89j92e8f1932m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hhojvjvjeeqnj4l7a9pmhu8oja</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAN_SHARE_DIR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hkffj6vscco1kmb8hi90m2lvd7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5ed91ushepcjlur73spj7h0prt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>r5nllka496gg3jcc061o9ll0h5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>196l2sdhddus14bn5ts6s8t73b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s1cl6n7a7s86a1rsqiosvu6dsm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3canofm13lpne0ia07md987ung</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_TODO"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l8095o4srmm7c5t9gqsq3ktt7l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dcffe4se2bq4caag5fgqa5fgpn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a5mg0c0dggvn97g5tsrhcc0v3s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>he7itia99oimlvac7hffkd0ltj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pa2v2vsoeobrbh5mtirl72h5b9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>crvtn20rk0dc3ac2cv5gtjqthk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3dsoemeb9p3o8q8p1llls8geth</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>b8v3og2bi1ja31j5mpokqofhet</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>cflbai4rgroqaqaipvp4cur6ve</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>"application/zip"</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5gnri5apvhltc4emq9l661p8ck</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sd471sus9s524ibis6odfrlbnb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1hsbd6j8m1ip0fllnr9fbt6efq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>m7gerhulmsjvcu6uomm3ob1rhd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>j8r3704qiou1p7veqpjtqgmdlq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jr12u0p542jdpptj5grendq98o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ddqpbat3a3fv30l93b87pu35bq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3jlcpu9d109cogkbsi92u6d6hj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5b8lm4rfr4e6p1uv6ou9b6aeet</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9pt11gc0o2i1tagl6737on5ac5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.PURCHASE_STATE_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vqd6n71t16ljn6c2d2klps944m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>psan02vjif2upakpivedebd6u3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>e6utp92o79l1o68t980mu1scrl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pbavn5e4fgg8904c06k3dml72e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>59mveq5apkfj02101e7j69dtga</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tfa452nok6tn6vu6u0ptqo49c0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>otnvj1o8rtqm17ooqpl0916ajr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>a7fc4hmrcd5hvfgagcbk8fm640</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>cj0ijrr0d00nbqr52vpusm8lo1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u0uia6alndhumaedq6stq1l653</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fd8lcu331raakfe197in48uqpo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>oqsv1dqvd9mopsh2b1uf97occa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5ulgc5d3bklfkrotfr2i94m11m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hrn4jth461g8s9rj0jkl64cc9d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lufee4c4e9dmhsb560kd7vn2q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>oqm60htjneeuln8eaato1gs7qu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ljsdnbn4co7vndkbet5lgeqvbv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.MOVE_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jli3o9s1s8ndda97anqdom0dnp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ttjobhtafa82kih15j2tsjc3jc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>le231grp4fq82m6o45lbokpp49</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i7gq9qjjon84ibni6oncja4mru</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2o064peqf192qg6avuigqj0tke</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>a2gvnmp326ccmub68cib99mpqe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7c5k4qjvla1qgjcshe1b77c4fp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>90iditstbjvn1hqkfi4dq9fck0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_CAPTCHA"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9ej2a0ebddafde183b8f2midba</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ogf81kobo234c0l91njqu24j3v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>"com.android.vending.billing.MarketBillingService.BIND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>jtpr9ci8a8p9913r95ip8vi0pu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1rqbnjtfij6rm6gcf5p7t5c5j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oo0b8qf1llk8jk6flfahgedl0s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>geu901b4oet6rmdof1j1h10441</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>69klo1i24n4qau0d2ubmd8keme</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>43qpt29fcoe5m9atfu50ag3fqd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7gr144oomjt454o2p55tsjt3it</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2kc0vo29ra2scf3gu5dhq1at6p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9ld0ajvpoqeashce7mg9kuhn0j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n8j1g88lcjmu6q7npv040b352q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u3edf70hlu9lkafp1tj140jp87</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>t997hg0kik2v34ud136qpnboug</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7qaodqlgt7goj28cpdivapsagb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAN_SHARE_DIR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>95ps9ag4qealni94el4l9abp54</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>mi0lae402mj1fm2ckdi7o44vv3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>492k2caqrqalrlv1mnbi42dif5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d2aqut4qjlho98jab90d4thtn5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>e08lejkpln3cki5ml3p0urr6be</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>prc19lubhve85n03b92uq0dg6s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3ttbsaas0nba9a6t1f13bthh0m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>v5f830emg113imnqqsvv3cv65c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h7bjm6jkl1i1jg87uas35jemhn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RESET_PASSWORD"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uujm3ftgo59dmcqcl3pieq4lb4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>np34riu5rdj4vv5p2a6pk9oook</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u9tk95b8db0k0nuqi4h6uk9r41</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hn4miju6bnaac677uvlk8cmqqk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.RESPONSE_CODE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ssm11cpsapdr8op7lkljhbmmh6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ekp88klonorblksmu7t30kdous</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tu6gn0mt4ebnvk42la09btqcrl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>graq85cqdhodja335psbfmkoqs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nbe4iokgr1k3k9r80cgei6l6k8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>tdhbbsajg8qvhh723b9mel3tl2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>uuhr7bk3d6is96o43figt0nutk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>o27ngana334r4hkouth5e1pntj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7v04ptrehskfgvo8h87vvjvnfo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>en91u33qc4sjvv6u7407idmgto</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>78o7s0nc47ulr2uqvja6cgncss</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.PURCHASE_STATE_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>16afi2jahscpo12s39fk7lrbic</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p9fg12ntpci28kuvu2u474krc4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>vlb0c6n8o78ncjl35lq3kppgat</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2l3ghikadj3dtk5qa0bjm1jpgt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>u31rmic4sfhscrenhr6nitnkih</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>"application/zip"</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8kcfi43luj8e42bal1r4d2jhb7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAN_SHARE_DIR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pa64k87q27m7tv371lc15pje4e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6136ethp2t494ionr3bfhdenes</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>og44hk92rhb9oaqahtvnfssme8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>cf8vs4d2n25ag33c67ho7nbjce</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4m42kch6pklo3562483ap7c66j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>o2mhsgm0s6k278dgius4sf6kj7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"ACTION_LINK_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>f763kipa1l55vbrlcc6f4as5ft</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pmudnig7a2af4rt32n41jqepus</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>tch0k180ekm19sgn9d7k08omit</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qktlgfhv2cd7ksj75iet6cpsuc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>g6qianv8huppfcg132hoa1qb9l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>nplkt54mt4k5s9p6msle9otmqk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>52ocvmdnfld9uu417bth6oiun9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>428rjov5nd1laa35kinvfqv7i2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>25civ0h8l1legli1t3gbdqmjnh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>g76ivc366bckdf23lre852v7af</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lqgvnnrgrvs5tqjfp85fm6ajvg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>opgc5mbahvlrc6k18fi0jnh2c5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tscijepr56nqp5hrqhihmf1ds8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>lk5qqqai5hsnjsplpo52flv41l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8ki1du22lc93d0fcov0r7f0bf0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ridgdqlb7om7r1k10rtecje3vk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.TAG_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p0q184c2rq2dje7sdu3c559m70</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9f8ai1r59m2d6kd2ubc76s5ti3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cfedkcfkis0be1j9c1iolqjjss</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.RESPONSE_CODE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nu6vqhj1nsh6j8nv2m9ugnob4g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>i8s7heltba6e4cceitikvoe363</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.SAVE_NOTE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>k8mm6bcsuiu8ketgrldvubo31v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sdbahrlbd90ihh6eus6lmchmi3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5icidgs4jh6kk6l1ikkrn24vma</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pt70h66b2aiiogh7o9kikor4fq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tdi41mq7i413pamcocdrbrshq3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u73gunqkk9e1pasd5g03gofjnd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ri7ogqv3tbcjsktjbtjg4plapo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p077a9vb4ep6ehimunjus2gb9f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hr50muqdh8jiir5haf2u5v12rk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>1ju43108kbsrhm2p49fn2gu8ch</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"android.intent.action.MEDIA_SCANNER_SCAN_FILE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>37111l1jjl1e7in111pq7om9c1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ap20oi9f4sdh10h5l221qsks47</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_READ_ONLY"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4mupo06263q8v9r40843f9e1lh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gb7hpelam8jec6j0ba2ajkvlna</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tupop1hqf6d7daaccm1loect5j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>51r3cj546vtbjt3bsqqt5c403c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rqvj3k3aq7hnerfl0arr1hh0qk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>a50jrokoin37rh6s4tutkdbjf3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hq51m2in07os5von0hp1kldulb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5nqfflv66nl5ova5lblmak2s52</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>egov12vv5jbtthddum3245r32v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>i8pt4qmto4ekhga7m81q466om7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>q144f33nvcrgp94b0m9edium2t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gu8vhilu4vv1qip86kqtn08rcl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.METADATA_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gvo8lr1r6t2qj3f53p2k8gsdcr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ev91v7c6gtgomg3qolofrj02rq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2catdkkfj6vivcr4hrb0hepdb7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>cui4pb997tpqpe3lkkkq4o8eak</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>iihv1j1lnlkvmektar24gah15i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>cu56fsgh8ar41r060kbt598n88</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.STOP_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>74al0k4hr7m5i4lcd5r6r3hgjn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rkhbmr6r53mf1dlbp32q8aj04t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p6ss4m31ujk10dahn27rfv345m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>p5v3du34e6kjimo5jm3l2b9no5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>at79m1i7od2qih1ddk8avrkooo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>t93hb03n6cp69nhm1fvpb5j267</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>prporqjln57viotcvsm681scps</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_CAPTCHA"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>97nq63fg8cogns1fg1jjibsa20</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>k09ckqq8d9b8m4o8nels5gmidh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_READ_ONLY"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qdmndgqcka6jfs3hm1u52qdk1a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kkj45h57ud7gt8k2c18dv8n7u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>svu606f6ecdja43fuumckmc38</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>6klqdto35qjfbmv33t7p5evmt8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>f2d3qvt9dodte1i04b797havso</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.evernote.billing.GET_PURCHASE_INFORMATION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bg9m4b0vd36g6ol253kq3mha6m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7kmo4gfq2rr7q93tab77ktm0nj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>asq77uo2gt98t5ck041ghrg9mg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cvj88o585a0mrkj2okr6okgkgn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>l8dj5rh1d0tk4229quqat69olv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6rn2dbkl4jmog7t2mv7o93mll7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6vdr15582f089ovlqu08p77nbp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nvfcdh9c55hj1asaunjnrmkgie</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uv90d22lq7m235ftgr6cuvij66</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9nsqeof3rdrjc4jkflruoh1on2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.METADATA_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>m6mktptjcj1p98qh4hsl2puci9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fs0v2su6u54nit3qeebfh4unvm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>qf9k7e3me10i0nd2h8k4clcv25</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>99lu2ldnmt70i8t7dfsmbujgp6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>uho347c9l263c1ha7ljlpieuq3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pvfj90of5bc52v61oa9ree2nst</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>taujv2uv83arboo937939c8go8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a2qd2ksd972u3ah2683fbrti9c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>bsm9bhrntifomrr34jv1h2ac0o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>9u7q7tqq66k3jink86popvhjbk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>40t6125ai194s13924ukrv3sfp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jsqemshq0l0d6ihmqfu95ga3so</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>dm0h12mfpm11hgjm6s13gqbpcl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>29k4dlecdrqk0ic90bv0veuc84</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.UPDATE_NOTE_TAGS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>svt9o25qk7umrkmqmi9dqu518s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>dkc9bran1lk2607q2j4vr3k0jb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>h0m9mhojeprgfgvnokib7jpn1a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>cj7huostgtjovhmbl2ovmr1p2v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fomm9tb602nagh3vh1e18q17o3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ee3ll9uj9s6afcs5kb8grsband</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>v1etms0kgqoq93lm8ndbrngp3b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_HTML"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jk92jkqpapjulackr3mkoa5dhe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>45i65pm84lb13l026iasrplvd2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>n7bgs8422jpactv1j01ev9itqr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>p4uitubbphvv3dr03rgbotuspd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jsojmd4e29nudk6d45n80cupq1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9u1151pt18ivcp6j7fm3r1n5sv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>khjmmhp07l56niv7nie40fsmln</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4k7bnbcut5bh92ts4rec5s9pu3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7s9jmq9q1lcvb7dsg1ojlrbptm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN_PREP_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>691006i0vo3nhkv8earn5l1kd4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>j78ihfj6r1flbk22qqb4dkl0j1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o7bg9nkh94e2pnquhg1d91f1sn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5aubfimfcof7bohtiaoabls4kq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>79c2elaea0q8oua2kj8dljvi3n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>t1qeau8mdmqeoe4n08gaplf58a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8a28augjkt58nrfva3h7v9bse0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oj6kt93qb82c834bm6cclvhiet</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>rklcr1gq858bj80nd71bhfu633</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uhqgh7v7aiqnvdff2batlm4t0d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9lok4usim1su6kagcms7rsnl1q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3t57u8g8ah7np8l0vc7ah51vij</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6a87nl4d9pnpulhhd66lho2dao</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mtedol4b2dgld61htko6d08u9i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>i0duvgvq9p0vq0anrbct9g73jd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>21963f6omkilrh8snupdl8clvu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>q3v68ubksi0aed4kd3r8ktuq3g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rcnedg44lj7b6d1lcvqq3ol1lp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>623dem4j0rchk955047od78q4j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tvklls42u9v0tvvocbmthp7947</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>o4kellq7kls9pr3eemevv6cjd6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ji8kjeo0qvb610tc6vna2s8cb3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>43ja6rnrlr404h303hdrcj2j7r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kgi4j4oi5rj2ot1bq2hk71gc5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3n529tjn5hti8i5b30aba0mv3m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>b0dlvvl2j3pdb1mgnsv1852q3h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4g4qcoc9jqf7mf5tt51p0vu7bj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGOUT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pb8fv7b9glbd68fblj0qe7l388</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>e8vhhkkcr35c2i0qrat88a3276</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>uhro4lodppenb0v268f8a36mk3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9ihbugkcutm39np6tdom237sfo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1fssja3g7dfjh0rmcjauvi25pn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>h3vaf6j70em6sjsf6h6mtqipgc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>bcncc7itiauus6to5051iugqsr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.MOVE_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>op11k9ufu3u89kkopu7ricp0jr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l63elud3oqimkhtfr1q0fosh6d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.SDCARD_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>cs66au88i686cem2v21qffijrs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>s10d2polvbmfbio1jk25st4tse</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_CORRUPTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>or5q3p5hol75amhfo8ket88cem</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>c1mtjhvfq41d7dllpnpm685n2f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>9b24p1ll94agc3chp21qjhcj2a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>i13rncd3uhii6tlcttelj25a7n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_HTML"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>c5fulp1rqo1q9d74mp6ngooebl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>recc509hj48eialnedien7icbm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_RECENT_NOTES_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>b8jmi1ftk08hvfsurft0coj35e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>t10n3cd83ldk3m1ftv1f6vjnrq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qilndj0vrvbhlpgrt3k9tu25i4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u2g5hhusri3qb0n4ftu14d1a32</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>36iol45rqsfeggssv31qm3674c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fbasd6qn9cpaid5q5dlht22ndf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3cg7lg1lb107bd8lrnefsgrvkv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hig3j38v083r2851bsh6qhqih2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>28q2k18d9li7j7kg263dhpdtia</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>o93h3n53cr005uen7pqtrvh8ke</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nlqpnhenpgh397h7ah5eibvf4q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>721p41oqpsb0gpa6tg08vu3286</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"ACTION_LINK_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>uh28fa4764ceecksetam7tlp6v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i98s3tlosbi7qrermm53jqjri4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>o54tvnvv6ba75d446neoi9fu9m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9n98p26ho6pbgqkb150eekbgal</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5de76vn0oerd0e495rfmlu49cb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>abu69gaf36r1g9kl7v0lhc01b3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>k8oin4ius5gbe3ipqllrqhqjk3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d1hcn8cp6joedq3q1da2d8hupf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>a190edpr1g1258psv76aqphkts</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6cqngp99i05n8msedhhsinc63m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.RESPONSE_CODE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kib3i2cni1qc196m1tauvre9ep</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>r0r7boubikdl3596rsabgpvkhe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>c2k066gkclsckh95sl10nl1fd4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_HTML"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7ojrd7i6g9ij0kklq0s4o25tog</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8ud6q8675qr35ugpfqamkqdkkv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ecfcbjod8hohhba87e08i3ac1g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uc045r9nho1emqbc0cojvlnot9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>i1q052p7d8ea2l6stqon0oupf3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>tgv70h31h4di8ptupfvo1d9b5v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8sv9l33toh88h04qvt4ls7psok</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1h9bn9pruib1esqpprbuaenkj1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7v0cfg5uf9qagm2dot6kf855n9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ii0aigomi5u23hfgi18juij4rn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fbpdmgtd28o1i60kinfiocsqls</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pl8o3pfjoe823f8u5521jdvo4b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fneb4hj0h9555tala0nlieeat6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.evernote.billing.GET_PURCHASE_INFORMATION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p8cgug2greev47s3bt8iqu4o17</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>is6u40juo18n4feq969rsknmvu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cfmdts87drmkvqkdk3eqmhj2a8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>p6qt1jp6mlr760kjsk379nuhh6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>maqjpa5eqfpombeslvco2he7bd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>ijb8si2vbpbh921ng7bvjfvulr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>m1u5mlmuo1vtsqpd8vjebvkl1n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1p1gvhmeo1tf9mcgijk5bt8t2i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>dqljpk403dgvqs9e9uov167qgg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.MOVE_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jmrhc6fa2mnq9r4g6r2fbofua1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>m5m9t85ck765miuqlli3mlc8qn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lhik08880nlovsb58s6mioqdv4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tnaprn3mmof4rvi96g1c9piv3v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4vrtasjpu1ahntor9dup5geelq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>v61n9j8ujgkk88ima36ltk8lnn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>os3p574ns494fokoeantnrnf14</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.evernote.billing.GET_PURCHASE_INFORMATION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a1mk3iilo259sqgrefnrnomc07</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mq1mjlf0nebigc4aoumi18gql1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>r8g33d1gm92vr37l0d4r49f4s5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3qdbrqgpoaja6c8mmpolqq2h94</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lsere4fecck7rnttpfg6uqugv7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kkh9q2onmg8q4jdnt2j14la7uc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_RECENT_NOTES_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>tkmake6dqbf5mtreu504ap7cff</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dfi9b08nugijqgk0k9r13ojhci</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CHECK_USERNAME"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>42lt9tsvnroc3p5g9bfgv1ous4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2cbrr2nlm8eeg42mdqgih850nr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>h6pl6nqq8d2oajphblocc0mifi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gbg5ia6i969kb2fps5hr5gbfb6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kpdr67ogdn5dnfterl5rmuilir</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>1lrqc6ifsoimp24ek1c0tkepb0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dtob5ahh1i3mhdeupv1fckck2p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sdeqkgs9m1eerk4h8f0rs13a7h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>o0hqq5nj0u61i2pj851d7qr0fd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u2j7hlpatradeopca95sh0odm6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>e8rund1cfco7097i7hfn5oadc1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>f5a9oo16q6ontcl4b2cl0a3708</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>o2goo231esdktcvudgil3lc9sm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jqanik2kpltjc3hupe7sdo2301</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3vhprd6ch5ojq93kn92us3ksuo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>iar0294u0fi6l1lqqk3a2fdloa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>kfsjd022k0gt5dlsk93frfm936</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ducdk3br3rmgr6rdvjbpovi88n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hdthcjnsh66f89vgb4eees12c0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ctf97mhgtctvut7bf5qih2saha</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kndsah1baqd4c7e1bmai5e7vfm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>emfj2knn29eprpfe9034gl3apk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>1f9gb1ouuan532rsn8hobhjbpt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2ehh3pv08t44n2e89i1m1uakqr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2vnv14h2fad9p67venomutc5tq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>r9u3md4oiokjodjb8i6524sqpq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>neqaloc9lqd3b8fooq02j8fv6n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>su0fjidc1udevoiv6kjq4p9o4b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5g1n9u87mrs8gctqgpjv4igsml</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5g0rdou9e3ntgvd2anbs9elij9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b9mltpktcast4a36iqc4oo2ft</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN_PREP"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nip11qv34iqht200t6d2anvu5a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>koo2rp5m4evtpvllbnl2qetck7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGOUT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5ob0adm9lds5lkrd6fsnnsjl0t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>6ta610rchkfonl44rmfkmk9cle</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hamselq67u94oqrjv8pr4l36e5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tjpe4k2dgehnme45tb9101a5ah</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>t44s91v6ff1nap94gal4dc860d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>l0oa5g4fdn07b6n6trs3at7214</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4qi70ga3sk1la780im64313480</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>mmp39ffpr1knd2rnkj5s9afhr9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>plrh2dpnrmajid4j9s0hfjuhs3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>17p16epd6b9v8nu1dk41begme6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ckgl587vc65vrimsa1kmu5ngi9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hcem7jgo91ib4u6lhioina638t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>n3is46ai4ed4v4hjl68q9196a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9som501ek86a78fgpod66b67r4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_CORRUPTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2q3bcd2g8ho149dr1de34qqde5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mmsbma903vb0o3u55tmm81t04e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6osfvqa4qduvo53868r6he6h3j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7iua9k7hgu143b4i76u1gp4adj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cbmlu5hlo66l1v8e8npnrf3qiu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3saumnu7johs1r9surpknua63s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hpve2k0ufl1s2m1kf4uhhculgk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9vcskefrhj73j8r2rpdotv029u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hid0avt283iavhq09v2cltqo9b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5pp14r1ostasrhdg5ql0j0ta3u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>f71e15lghhadadhsasmbgno3ed</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>f7cbpvf7ap6398kb0cv66ar2ch</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4ccs8adhtke5pu5njpiuk7qttv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2mch33qvqnsksnt8hsb9qqdjvp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>o63m24sm1mpjkeorrvkvbrfg24</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>i6sm161qppd0a2k3sq5o2uvhf6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.MOVE_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9s1pir83uu8rhi346hqmd3je5f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>tp0or2g9kep69oqls1gal4j3t8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hv4ioo2bf2fl29vn2h5fe6m9u5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l5d8dk9kh3gva9q3ushqdihqrp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>s61mkff44c8bop6gt0kn2n9kui</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ggqe7m1mrjthvmorg3u8cg25um</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vp33l7lk2gfbu6q5oucl48or8t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>toqbvup567ou8cd9vaeaitjrn8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>88b0ouo368ffj41cr5qasoamrt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>dtd65ujij1hfam5u8ae7kjnbkb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fdqq7e0rhd5e2peuajo89pnplb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hbas5j2mq71vkj2dha65lacni5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ldduon2mjjoi26aqnt7fjj4l77</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dekluv63tsqfoi511gm8kujsev</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gp4eolomfurssvlf4db2728li7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>9lhapi324i0rkdro3d2757q3le</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>it93eauk1g4mop5gfiml6jc9jj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4g0ms1487hh3rd60v1e1cup6ph</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.STOP_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rpnuvmotdcrqtl4r6auglmrdme</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>odnf0d7ih9faqvj6r2a7fo3hm6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>imkblhh4h7msh3fhl2bedt937c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gv6tqh8u4ef0v8vcv3l28rqktr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4n9ui62kd8ihp5nt1ocldpcj1p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>k0ifr48a9drj55tkh1m2geenq0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>shm9lspnru3h38ton0d3rcsnio</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>205viknua9g98hq48gdslpnn2h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fkfejas8a8dj6l414pfdfcvsvt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n7v5crj3amdtni3l9mbvkq7bd0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAN_SHARE_DIR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tchgrrkht0ee36k3ndvto03li3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>eoj29e5a50pdlpm95o9mne6vqv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>s2noojcv79rl5q26onitfrucjo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rvb3qkenj8j4utvm8o8q3hci7t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nlto5mp9jlqt5e5da25efa82sv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5d8ail9jncetvhnt3pj41udeo7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>uehpdai60ai2m64q1ri0ecs635</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>c4d2tbop1a1qtb3kp56shpnpoi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.TAG_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5fnum479v6bne4gg5fljrukahm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oodgec7nrnoq4jj4m1sialj61o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>amck2sm5vvecv13iumbf6np12l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9u7vu8qpm0q5377qjj066p06c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5irfldug51sb9j4umuqjiqaj2p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>t1994784ergvhmsucmk1hj0isr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>qgg3v7an3joqfouuck2pg9i1kl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qrals3ladsbq135mgpj55ndl9m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2mdp7ciqiak914dj9brl1r6387</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sqmseri4v83pnl4authc9734a3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1jh59t480df9j0a9t3inh73vcs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8ulpdfounh807it0m2vb0827s2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2cmbct6ccd870vj3pvr3geip74</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ueo5tqnhvma01ssgvj4se006qg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>purr8f3a9sg7alkobjhhrp2cfa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p71sp57gr7tdqmmckkmkl83fvp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_CAPTCHA"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rp0us2l310l58lb0tboqg8gnok</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1r5q1b4labh5o5b388ffhbtbrs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6nfdhjlrifr16bpila2o7g8uce</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RESET_PASSWORD"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vhsqp4h8m39pbhh31q145e84t1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.METADATA_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nq9h7qsqtdimg4fisekq339cf1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_TODO"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vgc57cesrusnr4nvnp5g9geasg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lh228i8t9f29ivgeug6i7ct1cf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tr6a8et3pa8k3jjkgspssn4ptb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>oq6dhoj155l749d2vt6o4oglm6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lv0a3kp64fkqtnu7eqkg48bt27</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2g6k3qo48p39k56mvog3gpve7c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.SDCARD_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>bb3ru8ofppbgj3f469tb4pkvc9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGOUT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p9jn72t326dcea1if9rba5duhj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>tojehbejfufnt05c2gflst2atn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>f0aslv9hfkj25r8k9f6s3hhnr2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>56oka8n8u9d57njt7qt1u2cek8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nf4oono2jh8iv9d6lantu9r641</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>e2ua4bb2dg1o03812g6dt4t1jk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>phh9qkk4j4jb9tfk6koq29q9d0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>e8iqj4soppppuudp9fe35u41d5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>eu69o5qti6d63tpg6m8dhi9v4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ssftg5mjfj89ko5ap9lm5m9rsp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qr479circdu683e0rpvho9olmd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.SDCARD_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7cnqf9u5mkj7ph1flb33vdlu4i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1batl78j853uk4vli8qvs8jtss</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>d0ch4m0le7333l0gsamd1v2tci</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>cpcr5q35o10k1g0arieak2vc1c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4db4nkcd48lonn212j4vgdfh9a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>dvjfquss607o5re68knf206u6m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>keioloq4q6aus0bk400psc9jio</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>iduhpmqc896imt41sqle5m1561</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>cv89uk6hjkje35lhe30qovepv1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>e5kgv5tm5ffkqc83c6f2n7fgt9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>c64mt3mhpmmh4dhovta25o1srn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6aj9bnouv0aq8e689kefgb8to1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>souuq8njtb6mjb36aemhiau1jn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>536cc40j9vuogpjke5chk4adea</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.evernote.billing.GET_PURCHASE_INFORMATION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3ijsr7uvrsrp4ldip278pdm61m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2kj4rs83e03sm999n2a7crkdvd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p0cishf6cs8acplbupl2d147np</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n8sn9f229u7tami49kl8fgaesl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>opjlei2glp3c7is468tqe18uqb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>foq6ccmb4emqirqrhs9fvrkauu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>8nhvl7lco7t8jpvk9rvkqqvepg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8qcgt0atesnpps9su17iqravdq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vo5eomjkppj7gmnl7kal69ah1d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gq62kj4nssjp6r7ancdb2d65mu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_CORRUPTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>sus3844caajqov400o4n80hjfn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>b957b4k47pvkgg9mjqg8o5857d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fda0fnqij7ifsu3tc8ko1bakm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fupbrvmah5a0fv2j29n6vc2jnq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rr253vpr73u4g1evus0hhir35g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>a8r4ln9kma7h2grj76p8l1uopi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>g2ph5pndcevdjr993tik71qgeh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ssgdh0nqifot8d4f2smtipf6op</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>6ltvhlet5f5b6g6dblbe6d104g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>igfmopfaig46jacdfhg7dksi4j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5jfdrf09jf2bnfjo4vj434up8q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN_PREP_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>n76cdf47hj7j99lke13vnij771</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>"com.android.vending.billing.MarketBillingService.BIND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>c1n203afni9etbrc9tfdcbrlu8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tudhnb8m59k2aped2egeioe032</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_RECENT_NOTES_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>j8av4tvhs4iup15pf6r4jo044n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1978l5dhqq3onrelmof8t5urio</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>n40s1picmsgt2geo6e44isk3nh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ne48u70hvrua1imohbb9cvfqdl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vn081hfts0j0aomc6rc4pk93hk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>i4am4hjhk3u7kifid29d4p8imr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nap1pl41qjoit0p95semqvveab</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9b4vip9qsrkssinlvm7sclhnd9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>dcuc7mga86r11s1ll5flkubka0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"ACTION_LINK_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>qpr4tk5dl1g74mullin6r1gsuh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>2btjijt0quiud85d6vdek3mc6c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2bio2krmkprmvr4hs8t6stcqa2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>sehs9tblvq48rak21d0gsc4m20</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7ah3t1mv6c61rn3kepjptrtc4n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3hrc716gotgv8c4bp3f5ms82s0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_CORRUPTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>78l89rcfb0u2dnk13jgv90kf4k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>"com.evernote.ACTION_STOP_AUDIO_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>k94bqmgmgffapabhkd33vnv70h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_READ_ONLY"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>42859o0ddits2mc5ohcnk15kq5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rtm3odpioqa4rg0dfunnn7maph</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>prn5g51ciplbh46haoo5ije2qu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>u3hgrucnrusni6chrrsa0929kd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gm80glv4pf1fclg8t3ps8vgla4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>45dk93oua5313in7rhnad1sutj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>osrj2hrmj57lfi8emal4s4eso9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bqlncgr7um71gj77pu32r60g8i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h15c2ccim95s5v432bu8c8i2sq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>note2l19smva1gf4ek7rafiquf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN_PREP"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s3ql8if2g8prqmt86tg3tch3e3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>sp5o7jcddg8srllt6cp3l5sobn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8bagn6dlfgb0m4fi32jcnodusf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cihqhf72j3fj745ff2mi43j99s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tpdhfk7ob2jp69gr3a1kqheguu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>h0upmfdvvh4oe6akdmoh97cva0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>rrj0akujl98pcgsh5trjdm2n5o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.PURCHASE_STATE_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6gapnm2tl72phf9fl86k4a3145</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>g60at5sgf22c49fpmhraac3h1p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>io493durfe63a8ku2ftma0g90r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qnnc2u649lifvlv1gtegt7gltu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ho4rqc43lq05irv4mh19jo4sll</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>smv5i6006nvj8c3pbfc48gomqc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>oqfajlg5l069566smsted0fujl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fienbe6le58m4d2n4b2ne21apn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>7aniej3k06scmkfs0aufbn3p14</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a1vne9mpl5ff1qbnj4vin6bp9a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5hdmomp1lvvf2kaqt3buorthp3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>7thkve8lnemqa626s37bv1qbos</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>obfkosemjfj7do9gvim9u4upth</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>lklk8pvt3pegnp6d6540766avt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b4nbirvm2ktvscd9s5pld8ms30</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>u53j3n84osvcdj2uo1achf6okc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.STOP_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h2p8r4edmn92ihscg2e585ab56</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u8898ji5qc8gfgh84f80vt2a34</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>r6o17n491dgofrf22kjubqo5fj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>m417lt21stc84nad3qc87vfo0u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vernst7cgvu54ee7ld3c3n7j0l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>d7r132elocc9ifdk64ipc34emj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6ophdk8kenbudea8va27fe84uk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>jmg49h5rulucavddagn3ecogu7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>4ihhkm5o1obg1bltfpjfno1kma</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_READ_ONLY"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>f70878v5as38ge0po69q93p8i9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>"com.android.vending.billing.MarketBillingService.BIND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>ijccvrim9c3hjnkgt0sjji3540</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8kcho56u83f535mh4qu94cd55b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kp16rmenti1f9bumguq0a050jp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>edq94280dbj3guqtjclmvts5u8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>t8n7b83bq3mkf0s6cnjcg9guam</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2h9pt868feo3kaboidbvvmhtlh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>t3lead9ghaejpn9i68a3rs6ie0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>onlj38ngjtg0k0f0bcm3354s40</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ckiceg5nj2h1gtd3ocsa4cm8k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>5rc8mqku8jr54b1a1o7qve41c8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>33v5laka32tni5j6420qkdbtle</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>buvt3q3enl69tba6qgn5q5dqhb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ptas7unhvsa52m04dtpju2jpb7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>lvhk5n8k15r5md65hnfd4aldsc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>pa36lmkl7lvkolojjntam61ein</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"android.intent.action.MEDIA_SCANNER_SCAN_FILE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5upg73d9flvl8orc6vbt164pfb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CHECK_USERNAME"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rb328bptidub0fj5hjtma0if50</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4gmolavieij55ff7ibvbvohf5h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ibi7nm3pcedek2r6ukfb98gg1b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>77fcad9bjeen8re3idmk6cd4j1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>urluocr9p05v9ldct3dk5lek23</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>c3p841cqr1p9fsifeo65eto1en</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i2ts226h8uifre5j85k7a1vsl6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>qh6p3ir6mh4e718bf3gr5fv18o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pvqq62tq6b7vir43j2n2ciprng</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.SAVE_NOTE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5h7hgidecq4prtklskik9qvv8c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2v5cbhe678j4rr5hntubbe2j2m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>b62bsgikirc482jqcu7o9sbmhr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>eusmbj0qjkflmi48et1gguk5ov</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pq6a1ib21lvt53sh4ulje0tp25</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nipafqptqmk0o4net139f51ag7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN_PREP_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8u9gc9dvo7c43t0qodq4gmhrgo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n4t50oj809bfjgliuhuuoje0q5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ch0sb5ob1l933tl6qhp677t80u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gsnl7ei5f3q93j68s16fithkgb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rsrat11ij0g695fdqqt07ploh5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3dforv10p936skq6v0os33vlev</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>n8pi09ehe5fh3u48897kcos3qu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pslgrajatohht55nh6qtbbg768</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>34ndtbf8j4m5u05hsdgjgnt7c8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i9vs0d58rr4qm6buis8ikfkahn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>amfu6mdm70414hbqu1m2dk07s0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.UPDATE_NOTE_TAGS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jollkkjieoga5iqokdlncb7jm3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>ff29005uqshhgeh3b6988giq92</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vm9dhpnjsua0nc7mmp6lo5i4e4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6gt5ceg88s4r3emhefbe86nqhm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>iui7mdfjdruee4g8rnbo17r8f0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ste23omu89vkq3vms00o72qkp7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>o5c682ap4nthd1fpf1ijafspvk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vsgasqjm284ntd3ejin6lst5p8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>93lotprt20njnhr9e97c8n1kss</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>1hcpjs2od7oad6tqs41p6ehsgr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>procj0h2um2i9o6bd503rpfheo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>79tuavrd947ga8jnf895n89v1a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ims06cg3jabca9ggjkakpl8239</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>6jpm246m948hv9aohtlqsiq20d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>c0nv1c8qcfjpa88jpt73dkvc5p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qsltv6di74bhn54ujjeo0nkjcc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p55spmc6lgr6ehh2e1c24q6782</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bh6ces5uc250j87ogeak9e8ud0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7cvbcepdpifb990qhf1sdojneb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>21b7196b8f79gdsjlt4tofdfcr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>jnbotrjoke2frcb1s1ko58eh0k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2o4do43mocrec1becvectq6am5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>rvnn8fnf8c9v37uqrkijocmnp3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gmtt4hp1siqh3000cusddil5qq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8hlqqa6k3tj6emvckklt7njfoc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7etrie3jtos5ecn4vqtlgupu9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.STOP_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d1deaahl289cl2ghc8e3pr2gds</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>no8gd7js5vj0e216chcqam70bg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>"com.evernote.ACTION_STOP_AUDIO_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bupf6o4nd0l3ia5ebtsshh7120</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>v7d1i1v81nanfladjoqh77rdg6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN_PREP"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>drm0sllms50nbg56547ckhvoga</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d8l328b1l7df57cqpo0nv5t4fp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>t1cnv6u34cjipa6k9alrj8j6l1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>entjh244da0jgjlsbsqivmgk85</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kcd3jvrbst2aj9ve4kb5gmpn15</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>t9pigmujsdn717ts15nq08ohs5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ip0ijfl5l0t8atfuphjo0c6frf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>du9ar88l212f9ml047i2ar9ng2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>25tdeodm34uoobfef12137n0lj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5geddr98pdq9cfhistjckduqes</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hiu4lvln3736m5ci1mlb0jvfqq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7tl38lfc5lka7turamv2m4r8ut</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>hvk03lhla2lfdgmgtou9d3s0lf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gcsmdnantu7sogoeq8fdn44l8b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>m548osvc73oe7371nj6l0fq4lv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gmgt4vsmir2gofuougsohuju3h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>cqo9psu17vgesi1g7lmk0cf04j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>e0s4bjfoi537vdbitj1q7oq75i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ve3kl437s3j11gt6m1ke7eq84j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8hcs5s59bu1qdnfv54pt017u0l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6o8chpq8l5h4sfu3aiv4aiv81t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>k8t7v0pqtb8piu1q0dgtkr36o0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tljd9mitv6jkasaanbg31nlml2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>n8knlu2qvbcj4t1qngn9r7ihn1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>mg3h7msuniph1g47oooi4m779s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n72jkk43mm7i4ibkufbopeu8or</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>k22c5ntaclf5gkmuvjqq8c6eqc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rrh0g0d0gk5ajhlgl5tctqstin</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>3ode1sdb8ituig3qo2dpdm52d6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>9ba2o23dboe5kv5emok19nesp0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>efumv87fi3lp9ll7g4sp8lhs6u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>p3itnesr8nq9c3136e4ka0k5ih</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>58v7fipaal8ucd0rk1mn7t2hec</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>42sjksruo1gurisb0jcsi0m19k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>"application/zip"</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>q0vvrik83vpn649qfuibr2vq5l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.SAVE_NOTE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>osq6if3as5kgqr9qgpib5p6nmt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jvbkrtb876q7epmtki55narcj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ge496b7aejj9gfm7r47nl65i82</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>doumv084gv144f4kekdqetr5u7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_CACHE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pbs3o7tciig34ntm9kist6ltgl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6tfjupvin4dfqpm4rhasq2a517</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>l9cv2a0ecsdnkqkb4ilikudefm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>d2nn21nau18070jrqn5akbuh8h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>703qfsvm92i1fhhpkpt5acb83e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>oi6mb1bbcln15mnt3u8tgfvoll</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3g5seb6pltud4cjk624acjurtl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2kd1oq1g17b4apnlhrao7k6dkc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>um7c7hveg2rcjl0di0vdcduq08</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n6h02df506epq9i1m4s7eqglji</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2t4h1js9j5v3skl4a7k72s1ore</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3u10onucp2qlrekmi9sftohk97</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>f0j82efabulvpkltqoo9esf5if</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kqmq07f095nmubhoa5v0nnsid3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d1uifq7ks60dn194jf9km46h7g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>51aivd148oa5gogonob69fadlu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8hnd6mis37u1qe5uqe1n0j5hbb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gv6ort6b3ineo04s3njloql830</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>di4u52h5hvm2rvqka8t1fpjoh8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>k1vsvjcrrblq8bkl340oh03mn0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>h8ki4qickf1qghdm6oc197mqi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>8ndn4pkc75d7e9k2jacdh2e7qr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5fot49c64bgjrc7rd7v1r73c0m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i73t1ectvqki4cbjgie1suilnm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>176lb2s9r6u8sjeq89uag4vap</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>d1c4afpqbvkrbtddtfvdcmimde</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>1c6rdersj0jmc6lb2mbv0u4jch</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CHECK_USERNAME"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qjp1vt6k0l98eqo1rm947e3sks</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>e4pf2kofj8qnrgam0vrmlnodlv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>au1fctbjg9qhkcjb1fsg1u1i4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lim4s5828rtpkmb9ptk1i9llss</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.METADATA_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>h56sumjr3fievvo579jqnc81ih</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>atk2qtumqiuu4iojemh5i25bic</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qi48u8lt9mt9l6mhb228sghpa7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mbr3tounvbts2978oifiar9me7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>s6efajo0ql2o0oo4t811sm77g9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>embuf4hnlqtm8o6elf7skrfppt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5dnmq2subir3snv86fp3r5bf6l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>urgvukk7fm1pjgg0g681mjruve</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ams5jvn37bdj179pfo1gt938au</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5cs9s3lqeu5enkna8fs9hbukkr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2im20rcdgk6thpl8ipao89fl72</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>j2t6ovnljth1np5cggeu37bdm6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kadcrp7io235g4rvdg9hq4h704</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ivkrpiuokl9a86g524bg395v3p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>30imr1b91hjt76kpnk6nhktibv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>29kndup4lc9qfkbkljruvpddd1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1s9b3gs0c8bvt9v3upcb39m8sl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>c2b7ja1okaakhvij0iog5vfoql</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>912d74l0ke4828714oseivdkvd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>e3kg9ouqsdgmkrrm62khvj0dd5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>l7gnuagvtl66c5a6ga3m3pcfk6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>bd1qtmpjfvidnnitaqav6umip4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>a0h1n89lrnmhrsnq79htbe39k0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qdcml8rmp29916l7hiukomalrf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>aih80ikr2ceb6uoaopgd1h0gf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ocijq85ljrdbjsa262hqvglv49</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.TAG_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sb4jr2v5ejgguj1d400nq8goi2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>hu6hpp4cg9dm35qv2fj8eqv2jn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>sbudupqbl2pr1nqkvq40sdtgj0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kis4tb4484n79h0pb7qc4hf9bf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>1nar9ki6dmctfu2tfp9ga1nr8q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5ffr695ohdq0l7n74plifmhnup</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>501lj0sj3cr9nd01c30k3h4ntk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>36p05lurl216ul3rdjblhp308j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>r1kceheo02vq9d09sus8jq10ru</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>88khvfn4h4moafp7eroqqcqni1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>83n2l2hngqdk5tg5ubno9tjr9v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>bdkto12apc2no982qdtsb2qari</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>iji25omj8s0mr98d41k54aej01</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qqseanat3iqj7tqr5chv7f49he</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>21jqf9j18hb3sibfc5ki4t60ht</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>evbingt2m1c1afjmuioq95gmek</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>le7ggli166iqrqslcg7e3nqs72</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>n1pitvclqo372djlb9rle0pmu7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3i39qbfd2ndvirmar0ec2ngccp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fkkbtq3uhgd5r8odlc6ph2v0b1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4je086p0udvqb5jd4hef9ajff</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>tf3u6q66ct7a32gr4rqjbq2g11</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kog8nro4k6sdnc7669cmhmue5h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vsol1g58rl9dfbab4p464jstp8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pdve5i331s09h0pld4tdhl9mta</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>j7phj7m3qhuf73s9itb8hbpipq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>s9c9doefhvvnahvo9vlkjqqoi2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dsc2q2qjflrbql4f46b0n4ei7b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>q0ugvh6a1dh750u88djkjvn703</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN_PREP"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mccc8vcgsd2kpvb3louge2vfq5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>t3t6dk38cks4lt491tkkvj7gkc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>drjagl5v1tdkujakd81a9k5cg7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7nsbm6fb5jgt13tfa74uv6v75m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pca97s2phmuusf442cpe2sjp3b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>188liii84m82f7fvnb35skd45h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.PURCHASE_STATE_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2f89fbiuq9n32ofpo6hs8m7b4h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8bqh3ubvts2182smmj3n6ou849</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nb6qapco10v66ud3did6st3rla</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>p7kdh6quu92e4q120lusl9ujk7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>t40di0ti05mu104p8sij05sbej</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vq8c4a5q4v0ufidlfhvugm6c0d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3d1ok227176oq56c7r0jn1o6h9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rs5s0r4vonq1d7el8lav38s7bg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>63m0tg01ae03fv10gs25s6tthf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7ef5d4pk48enjkivtopbvpsqjo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_CACHE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h7iksvm49udhbdrotbm073g3mr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>1obhq7oq66bj51kaogn7jb9foc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8nvoc9h4tlcune6ap6o9ue330r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>2aq5icbc0dh9caoil9a85ss7t0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1pvnp8noqgvn5nrsp0kl83ttsk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.SAVE_NOTE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>k200qofues5pgde6abe0b4cqrg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"android.intent.action.MEDIA_SCANNER_SCAN_FILE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1o7egrtl06h0rouaqdao1efdi2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rfmbsjmlov5cqsq55om1p11e80</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>72c2b4eqlvlfrcnrb82k60l4mv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5i8urqms8s8k0ika0399oirua5</id>
            <random/>
        </Intent>
    </newIntents>
    <ContentProviders>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.util.Collection,java.lang.String,com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: android.app.Dialog V()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r22</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String e(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookShareSettingsActivity: java.lang.String d(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean c(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: com.evernote.e.c.i a(android.content.Context,android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void n()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: boolean e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: int a(android.app.Activity)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.n: void a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: com.evernote.e.c.i a(android.content.Context,android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: void a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: void g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.a.d: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r8</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ai: android.database.Cursor a(java.lang.CharSequence)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.an: boolean c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.List a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: boolean a(int,com.evernote.ui.helper.ah)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(android.content.Context,java.lang.String,java.lang.String,int,com.evernote.client.t)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>0</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$14: com.evernote.e.c.g doInBackground(android.net.Uri[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void e(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: com.evernote.e.c.g b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.b: void &lt;init&gt;(android.content.Context,android.net.Uri,int,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.dg: com.evernote.ui.helper.dl d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(android.content.Context,java.lang.String,int,com.evernote.client.t)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: com.evernote.ui.helper.be a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: android.app.Dialog V()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.JSKeywordSearchInfo: java.util.List getResourceHightableImages()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.lang.StringBuilder e(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean d(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: java.lang.String a(android.content.Context,java.lang.String,boolean,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: int a(android.content.Context,java.lang.String,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void b(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: long f(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: boolean aa()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r27</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,com.evernote.e.c.g,java.lang.String,com.evernote.client.m)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: android.content.ContentValues a(com.evernote.client.Draft,byte[],long,long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>a</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EmailActivity: void f()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean r()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.a.d: void f(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: void a(android.net.Uri,android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void a(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.ArrayList a(android.app.Activity,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$z2</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.StringBuilder c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r12</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,com.evernote.client.m,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r2</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r1</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EmailPickerFragment: android.database.Cursor a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.maps.EvernoteMapActivity: void e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void a(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void c(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ai: android.database.Cursor a(java.lang.CharSequence)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void b(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,com.evernote.e.c.g,com.evernote.client.m,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: boolean b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.ArrayList a(android.app.Activity,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.WidgetProviderService: java.util.Set a(android.content.Context,int,android.widget.RemoteViews,int,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NewNoteActivity: void onActivityResult(int,int,android.content.Intent)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.an: boolean a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.d: void b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.SearchFragment: android.database.Cursor c(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int b(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void a(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: java.lang.String a(android.content.ContentResolver,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: boolean a(int,com.evernote.ui.helper.ah)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r13</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.util.Collection,com.evernote.client.m,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: void h(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean c(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: boolean c(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean a(int,com.evernote.ui.helper.ah)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void m()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void b(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r16</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r13</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.b: int d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.RateAppActivity: boolean a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.x)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int b(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.util.List b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void e(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r22</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: void h(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.b: android.graphics.Bitmap a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r2</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.o: com.evernote.e.c.i b(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: java.util.Map c(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void a(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: android.net.Uri d(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: boolean j(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r1</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean d()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.String d(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(android.content.Context,android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.AdvanceSearchSelectorFragment: void E()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void q()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: boolean a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.dg: com.evernote.ui.helper.dj b(android.app.Activity,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: java.lang.String b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.StringBuilder b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.o,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: android.database.Cursor a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean d(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r8</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,boolean,boolean,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: java.lang.String a(android.content.ContentResolver,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: com.evernote.ui.helper.bx a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: java.lang.String c(android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r13</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.a.d: void e(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean p(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.io.File)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void c(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void c(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.u: void a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.maps.s: int a(com.evernote.ui.helper.bp,com.google.android.maps.MapView)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.d: void b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.be: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.io.File)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: void h(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment$28: java.lang.String doInBackground(java.lang.Void[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.WidgetProviderService: java.util.Set a(android.content.Context,int,android.widget.RemoteViews,int,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void b()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r37</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r16</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment$28: java.lang.String doInBackground(java.lang.Void[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void b(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.o,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.k)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean d(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: int a(android.content.Context,java.lang.String,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void l()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,java.lang.String,boolean,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List j()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void d(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.maps.EvernoteMapActivity: void e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,java.lang.String,boolean,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void a(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean j(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.List b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.StringBuilder a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.Evernote: boolean c(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r12</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,boolean,boolean,com.evernote.client.m,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void f(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: java.util.Map c(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void c(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: com.evernote.e.c.i a(android.content.Context,android.database.Cursor,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String c(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.AdvanceSearchSelectorFragment: void E()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r37</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean e(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r37</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: boolean b(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String e(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.x)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: java.lang.String a(android.content.Context,java.lang.String,boolean,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.JSKeywordSearchInfo: void init(android.net.Uri,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void e(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void b(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.List g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean b(android.content.Context,java.lang.String,java.lang.String,int,com.evernote.client.t)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void d(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: boolean c(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NewNoteActivity: void u()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.util.List b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r1</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EmailPickerFragment: android.database.Cursor a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: com.evernote.ui.helper.bx a(android.content.Context,android.net.Uri,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r2</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void a(int,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.o)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(android.content.Context,java.lang.String,int,com.evernote.client.t,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.k)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.an: java.lang.String b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.z)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: java.util.List a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,long)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void k()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
    </ContentProviders>
    <usesPermissions>
        <permission>WRITE_EXTERNAL_STORAGE</permission>
        <permission>READ_LOGS</permission>
        <permission>BILLING</permission>
        <permission>INTERNET</permission>
        <permission>GET_ACCOUNTS</permission>
        <permission>READ_DATA</permission>
        <permission>RECORD_AUDIO</permission>
        <permission>ACCESS_FINE_LOCATION</permission>
        <permission>INSTALL_SHORTCUT</permission>
        <permission>ACCESS_COARSE_LOCATION</permission>
        <permission>WRITE_DATA</permission>
        <permission>ACCESS_NETWORK_STATE</permission>
        <permission>READ_PHONE_STATE</permission>
        <permission>WAKE_LOCK</permission>
        <permission>READ_CONTACTS</permission>
        <permission>VIBRATE</permission>
        <permission>ACCESS_WIFI_STATE</permission>
    </usesPermissions>
    <actuallyUsesPermissions>
        <permission>WAKE_LOCK</permission>
        <permission>RECORD_AUDIO</permission>
        <permission>ACCESS_NETWORK_STATE</permission>
        <permission>ACCESS_WIFI_STATE</permission>
        <permission>ACCESS_FINE_LOCATION</permission>
        <permission>ACCESS_COARSE_LOCATION</permission>
        <permission>VIBRATE</permission>
        <permission>READ_PHONE_STATE</permission>
        <permission>GET_ACCOUNTS</permission>
        <permission>INTERNET</permission>
    </actuallyUsesPermissions>
    <requiredPermissions/>
    <apkFile>../../../app_repo/bundle/Evernote.apk</apkFile>
    <name>Evernote</name>
</application>
